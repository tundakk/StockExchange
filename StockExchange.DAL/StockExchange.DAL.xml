<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockExchange.DAL</name>
    </assembly>
    <members>
        <member name="T:StockExchange.DAL.DataModel.DataContext">
            <summary>
            DataContext file. inherits from DbContext.
            Im using lampda Set to remove possible null value from the constructor.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.DataModel.DataContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{StockExchange.DAL.DataModel.DataContext})">
            <summary>
            Default constructor for the DataContext file.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:StockExchange.DAL.DataModel.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            dataseeding. On model creation it seeds 3 rows in every table.
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:StockExchange.DAL.DataModel.DataContext.Exchanges">
            <summary>
            creates a table and relation for Exchanges.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.DataContext.StockSymbols">
            <summary>
            creates a table and relation for StockSymbols.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.DataContext.EodPrices">
            <summary>
            creates a table and relation for EodPrices.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.DataModel.DataContext.SetModified``1(``0)">
            <summary>
            Sets database state to the modified state.
            I dont know if this method should be part of the implemented datacontext or somewhere else.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="T:StockExchange.DAL.DataModel.EodPrice">
            <summary>
            DAL datamodel for EodPrice.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.EodPrice.ID">
            <summary>
            Primary Key of EodPrice object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.EodPrice.Date">
            <summary>
            Property. Date created. Default time is datetime.Now.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.EodPrice.ClosePrice">
            <summary>
            Property. Close price of entity in decimal.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.EodPrice.StockSymbol">
            <summary>
            The parent object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.EodPrice.StockSymbolId">
            <summary>
            The ID of the parent StockSymbol.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.DataModel.Exchange">
            <summary>
            DAL datamodel for Exchange.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.Exchange.ID">
            <summary>
            Primary Key of Exchange object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.Exchange.Name">
            <summary>
            Human readable name of the Exchange object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.Exchange.IsActive">
            <summary>
            If exchange object is active.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.Exchange.StockSymbols">
            <summary>
            List of StockSymbols attached to the exchange object.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.DataModel.StockSymbol">
            <summary>
            DAL datamodel for StockSymbol.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.ID">
            <summary>
            Primary key of StockSymbol object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.CompanyName">
            <summary>
            Human readable name of the company.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.Ticker">
            <summary>
            Ticker for the stocksymbol object.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.IsActive">
            <summary>
            If stocksymbol object is active.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.ExchangeId">
            <summary>
            The ID of the parent Exchange.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.Exchange">
            <summary>
            The parent Exchange.
            </summary>
        </member>
        <member name="P:StockExchange.DAL.DataModel.StockSymbol.EodPrices">
            <summary>
            List of EOD prices attached to the StockSymbol object.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Repos.Base.BaseRepo`1">
            <summary>
            The base repository class.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:StockExchange.DAL.Repos.Base.BaseRepo`1.DeliveryContext">
            <summary>
            Public readonly property used as DI for classes.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.#ctor(StockExchange.DAL.DataModel.DataContext)">
            <summary>
            default constructor for the BaseRepo class.
            </summary>
            <param name="deliveryContext"></param>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.Delete(`0)">
            <summary>
            The abstract Delete method.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.GetAll">
            <summary>
            The abstract GetAll method.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.Insert(`0)">
            <summary>
            The abstract Insert method.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.Update(`0)">
            <summary>
            The abstract Update method.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.BaseRepo`1.Save">
            <summary>
            The default Save method.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Repos.Base.IBaseRepo`1">
            <summary>
            Theinterface for the base repository class.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.IBaseRepo`1.GetAll">
            <summary>
             Get all entries in the repo.
            </summary>
            <returns>Returns all instances of a given entity.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.IBaseRepo`1.Insert(`0)">
            <summary>
            Add and entity to repository.
            </summary>
            <param name="entity"></param>
            <returns>Returns object that was created.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.IBaseRepo`1.Update(`0)">
            <summary>
            Updates an exising entity in the repository.
            </summary>
            <param name="entity"></param>
            <returns>Returns an updated object of the entity.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.IBaseRepo`1.Delete(`0)">
            <summary>
            Removes an entity from the repository.
            </summary>
            <param name="entity"></param>
            <returns>Returns an object that was removed.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Base.IBaseRepo`1.Save">
            <summary>
            saves changes to repository.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Repos.EodPriceRepo">
            <summary>
            Repository class for Eod Price.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.#ctor(StockExchange.DAL.DataModel.DataContext)">
            <summary>
            Default constructor for EodPriceRepo.
            </summary>
            <param name="deliveryContext">Public readonly property on the BaseRepo class.</param>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.Delete(StockExchange.DAL.DataModel.EodPrice)">
            <summary>
            Deletes an eod price.
            </summary>
            <param name="entity"></param>
            <returns>returns the eod price that was deleted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.GetAll">
            <summary>
            Gets all entities from EodPrice table.
            </summary>
            <returns>returns a populated list of type EodPrice, of all entities in the database.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.GetById(System.Int32)">
            <summary>
            Get EodPrice object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated EodPrice object by matching ID.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.GetByStockExchangeIdAndDate(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets a list of EodPrice objects with specific StockSymbolId and a date range.
            </summary>
            <param name="stockId"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns>Returns a list of EodPrice objects.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.EodPriceRepo.Insert(StockExchange.DAL.DataModel.EodPrice)">
            <summary>
            Inserts an eod price into the database.
            </summary>
            <param name="entity"></param>
            <returns>returns the populated EodPrice that was inserted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:StockExchange.DAL.Repos.ExchangeRepo">
            <summary>
            Repository class for Exchange.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.#ctor(StockExchange.DAL.DataModel.DataContext)">
            <summary>
            Default constructor for ExchangeRepo.
            </summary>
            <param name="deliveryContext">Public readonly property on the BaseRepo class.</param>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.GetAll">
            <summary>
            Gets all entities from Exchange table.
            </summary>
            <returns>returns a populated list of type Exchange, of all entities in the database.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.GetById(System.Int32)">
            <summary>
            Get Exchange object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated exchange object by matching ID.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.GetByName(System.String)">
            <summary>
            It gets an exchange from repo by name.
            </summary>
            <param name="name"></param>
            <returns>a populated exchange object.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.Insert(StockExchange.DAL.DataModel.Exchange)">
            <summary>
            Inserts an exchange into the database.
            </summary>
            <param name="entity"></param>
            <returns>returns the populated exchange that was inserted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.ExchangeRepo.Delete(StockExchange.DAL.DataModel.Exchange)">
            <summary>
            Deletes an exchange.
            </summary>
            <param name="entity"></param>
            <returns>returns the exchange that was deleted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:StockExchange.DAL.Repos.Interface.IEodPriceRepo">
            <summary>
            Interface for repository for EodPriceRepo.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IEodPriceRepo.GetById(System.Int32)">
            <summary>
            Get Eod Price object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated eodprice object.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IEodPriceRepo.GetByStockExchangeIdAndDate(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Get a list of Eod Price objects by stockSymbolId and a range of dates.
            </summary>
            <param name="stockId"></param>
            <param name="from">The start date.</param>
            <param name="to">The end date.</param>
            <returns>Returns a list of EodPrice by stockSymbolId where datetime from to datetime to.</returns>
        </member>
        <member name="T:StockExchange.DAL.Repos.Interface.IExchangeRepo">
            <summary>
            Interface for repository for StockSymbolsRepo.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IExchangeRepo.GetById(System.Int32)">
            <summary>
            Get Exchange object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated Exchange object.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IExchangeRepo.GetByName(System.String)">
            <summary>
            Get Exchange object by name property.
            </summary>
            <param name="name"></param>
            <returns>Returns a populated Exchange object.</returns>
        </member>
        <member name="T:StockExchange.DAL.Repos.Interface.IStockSymbolsRepo">
            <summary>
            Interface for repository for StockSymbolsRepo.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IStockSymbolsRepo.GetById(System.Int32)">
            <summary>
            Get StockSymbol object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated StockSymbol object.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IStockSymbolsRepo.GetByName(System.String)">
            <summary>
            Get StockSymbol object by name property.
            </summary>
            <param name="name"></param>
            <returns>Returns a populated StockSymbol object.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.Interface.IStockSymbolsRepo.GetListOfStockByExchangeId(System.Int32)">
            <summary>
            Get StockSymbol object by name property.
            </summary>
            <param name="exchangeId"></param>
            <returns>Returns a populated List of stocksymbol objects.</returns>
        </member>
        <member name="T:StockExchange.DAL.Repos.StockSymbolsRepo">
            <summary>
            Repository class for stocksymbol.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.#ctor(StockExchange.DAL.DataModel.DataContext)">
            <summary>
            Default constructor for StockSymbolsRepo.
            </summary>
            <param name="deliveryContext">Public readonly property on the BaseRepo class.</param>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.Delete(StockExchange.DAL.DataModel.StockSymbol)">
            <summary>
            Deletes a stocksymbol.
            </summary>
            <param name="entity"></param>
            <returns>returns the stocksymbol that was deleted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.GetAll">
            <summary>
            Gets all entities from stocksymbol table.
            </summary>
            <returns>returns a populated list of type StockSymbol, of all entities in the database.</returns>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.GetByName(System.String)">
            <summary>
            It gets an object of type StockSymbol from repo by name.
            </summary>
            <param name="name"></param>
            <returns>a populated StockSymbol object.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.GetById(System.Int32)">
            <summary>
            Get StockSymbol object by ID.
            </summary>
            <param name="id"></param>
            <returns>Returns a populated StockSymbol object by matching ID.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.GetListOfStockByExchangeId(System.Int32)">
            <summary>
            Gets a list of StockSymbol by exchangeId.
            </summary>
            <param name="exchangeId"></param>
            <returns>Returns a list of StockSymbol all entities with exchangeId set to input.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StockExchange.DAL.Repos.StockSymbolsRepo.Insert(StockExchange.DAL.DataModel.StockSymbol)">
            <summary>
            Inserts a stocksymbol into the database.
            </summary>
            <param name="entity"></param>
            <returns>returns the populated stocksymbol that was inserted.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
    </members>
</doc>
