<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockExchange.DAL.Tests</name>
    </assembly>
    <members>
        <member name="T:StockExchange.DAL.Tests.BaseTests`1">
            <summary>
            Mocked BaseTest class.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:StockExchange.DAL.Tests.BaseTests`1.LoggerMock">
            <summary>
            Return  Logger Mock for each test.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Tests.EodPriceRepoTests">
            <summary>
            EodPrice repository tests.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Tests.EodPriceRepoTests.Setup">
            <summary>
            Setup to be ran before every test.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Tests.EodPriceRepoTests.GetById_WithValidId_ThrowsException">
            <summary>
            Test - Get by ID with valid instance id. Throws exception.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Tests.EodPriceRepoTests.GetById_WithValidId_ShouldReturnEodPriceEntity">
            <summary>
            Test - Get by ID with valid instance id.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Tests.ExchangeRepoTests">
            <summary>
            Exchange repository tests.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Tests.StockSymbolRepoTests">
            <summary>
            StockSymbol repository tests.
            </summary>
        </member>
        <member name="T:StockExchange.DAL.Helpers.RepoTestHelper">
            <summary>
            Helper for writing repository tests.
            </summary>
        </member>
        <member name="M:StockExchange.DAL.Helpers.RepoTestHelper.GetQueryableMockDbSet``1(System.Collections.Generic.List{``0})">
            <summary>
            Create a queryable mock dbSet given a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceList"></param>
            <returns></returns>
        </member>
    </members>
</doc>
